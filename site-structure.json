{
    "title": "Nature of Code - Elm",
    "introduction": "<a href=\"https://natureofcode.com/\">Nature of Code</a> examples and exercises implemented in Elm. Let's see how far we can get with a functional language :). <a href=\"https://github.com/mark-gerarts/nature-of-code-elm\">Source</a>.",
    "basePath": "/nature-of-code-elm",
    "content": [
        {
            "module": "Introduction",
            "title": "0. Introduction",
            "content": [
                {
                    "module": "TraditionalRandomWalk",
                    "title": "Example I.1: Traditional random Walk"
                },
                {
                    "module": "RandomNumberDistribution",
                    "title": "Example I.2: Random number distribution"
                },
                {
                    "module": "BiasedToTheRightRandomWalk",
                    "title": "Example I.3: Walker that tends to move to the right"
                },
                {
                    "module": "GaussianDistribution",
                    "title": "Example I.4: Gaussian distribution"
                },
                {
                    "module": "PerlinNoiseWalker",
                    "title": "Example I.5: Perlin noise walker"
                },
                {
                    "module": "TwoDimensionalPerlinNoise",
                    "title": "Example I.6: 2D Perlin noise"
                },
                {
                    "module": "BiasedRandomWalk",
                    "title": "Exercise I.1: Walker that tends to move to the bottom right"
                },
                {
                    "module": "DynamicBiasedRandomWalk",
                    "title": "Exercise I.3: Walker that tends to move to the mouse"
                },
                {
                    "module": "PaintSplatter",
                    "title": "Exercise I.4: Paint splatter"
                },
                {
                    "module": "GaussianRandomWalk",
                    "title": "Exercise I.5: Guassian random walk"
                },
                {
                    "module": "CustomDistributionWalker",
                    "title": "Exercise I.6: Custom distribution walker"
                },
                {
                    "module": "PerlinNoiseWalkerStepSize",
                    "title": "Exercise I.7: Perlin noise walker (step size)"
                }
            ]
        }
    ]
}
